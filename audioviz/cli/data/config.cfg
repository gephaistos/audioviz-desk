; Settings for the main window
[Window]
; desired FPS, renderer will try to handle it
fps = 60
; either a pair of values (width, height) that defines window size or 'screensize' value to cover all screen
size = screensize
; a pair of coordinates for top left corner, ignored when 'screensize' is used
position = 0,0


; Settings for sources to be tracked by audioviz
[Listen]
; device name to connect to, run audioviz with -s (--sources) option to show available
; to let the default choice pass None value
device = None
; list of applications to listen to, run application you want to listen and at the same time audioviz with -s option to show available
; if there are no preferences then pass None value
apps = None


; Settings for rendered bars
[Bars]
; color with alpha channel in hex format RRGGBBAA
color = 3F5F50C0
; split distance between bars (in pixels)
padding = 5
; margin for the right border of drawing area for bars
right_offset = 5
; margin for the bottom border of drawing area for bars
bot_offset = 5
; margin for the left border of drawing area for bars
left_offset = 5
; margin for the top border of drawing area for bars
top_offset = 5
; frequnecies distribution among bars (energy bins)
; if 'octave' distribution is used amount of bars is approximately 11 * `number_factor`
; if 'logspace' distribution is used amount of bars is equal to `number`
; options: (octave, number_factor), (uniform, number)
distr = logspace,63
; TODO
; if `number_factor` is low (< 5), doubles bars number using 1d interpolation
; use_interpolation = False


; Addtional visualization effects
; TODO
[Effect]
; rotate bars rendering counterclockwise
; options: 0, 90, 180, 270
rotation = 0
; apply monstercat filter to bars, value is an exponentiation base
monstercat = 2.0


; Settings for singal processing
[Spectrum]
; sampling frequency, recommended value is 44100 Hz or 48000 Hz, depends on hardware
frequency = 44100
; number of audio channels, only 1 is currently supported
channels = 1
; window which is applied to signal before calculating Fourier transform
; options: hanning, hamming, rectangle
window = hanning
; frequency weighting type, currently disabled
; options: A, C, Z
; weighting = C
; lower frequency bound, Hz
lower_freq = 12
; upper frequency bound, Hz
upper_freq = 12000
